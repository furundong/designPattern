package cn.designPattern.dp.creator._2_FactoryMethod.example2;

public class Client {
    public static void main(String[] args) {
//声明阴阳八卦炉
        AbstractHumanFactory YinYangLu = new HumanFactory();
//女娲第一次造人，火候不足，于是白人产生了
        System.out.println("--造出的第一批人是白色人种--");
        Human whiteHuman = YinYangLu.createHuman(WhiteHuman.class);
        whiteHuman.getColor();
        whiteHuman.talk();
//女娲第二次造人，火候过足，于是黑人产生了
        System.out.println("\n--造出的第二批人是黑色人种--");
        Human blackHuman = YinYangLu.createHuman(BlackHuman.class);
        blackHuman.getColor();
        blackHuman.talk();
//第三次造人，火候刚刚好，于是黄色人种产生了
        System.out.println("\n--造出的第三批人是黄色人种--");
        Human yellowHuman = YinYangLu.createHuman(YellowHuman.class);
        yellowHuman.getColor();
        yellowHuman.talk();
    }
}
/*

这是一种比较经典的用法， 工厂方法模式有很多扩展，而且与其他模式结合使用威力更大，如下。
这么做好像已经解决了办法, 但其实已经是个抽象工厂了, 他们的选择就在于产品等级跟产品簇的变化.
 */
